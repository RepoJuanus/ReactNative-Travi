{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { increment, incrementByAmount, decrement } from \"../features/counter/counterSlice\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Counter = function Counter() {\n  var count = useSelector(function (state) {\n    return state.counter.value;\n  });\n  var dispatch = useDispatch();\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    amount = _useState2[0],\n    setAmount = _useState2[1];\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Button, {\n      title: \"+\",\n      onPress: function onPress() {\n        return dispatch(increment());\n      }\n    }), _jsx(Text, {\n      children: count\n    }), _jsx(Button, {\n      title: \"-\",\n      onPress: function onPress() {\n        return dispatch(decrement());\n      }\n    }), _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(TextInput, {\n        style: styles.input,\n        onChangeText: function onChangeText(t) {\n          return setAmount(parseInt(t));\n        }\n      }), _jsx(Button, {\n        title: \"agregar\",\n        onPress: function onPress() {\n          return dispatch(incrementByAmount(amount));\n        }\n      })]\n    })]\n  });\n};\nexport default Counter;\nvar styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  },\n  inputContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    alignItems: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","useSelector","useDispatch","increment","incrementByAmount","decrement","jsx","_jsx","jsxs","_jsxs","Counter","count","state","counter","value","dispatch","_useState","_useState2","_slicedToArray","amount","setAmount","View","style","styles","container","children","Button","title","onPress","Text","inputContainer","TextInput","input","onChangeText","t","parseInt","StyleSheet","create","flexDirection","justifyContent","alignItems"],"sources":["/Users/Ing.Travi/Documents/CODERHOUSE/App/clase_10_tab/src/Components/Counter.js"],"sourcesContent":["import { StyleSheet, Text, View, Button, TextInput } from 'react-native'\nimport React, {useState} from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { increment, incrementByAmount, decrement } from '../features/counter/counterSlice'\n\nconst Counter = () => {\n\n    const count=useSelector((state)=>state.counter.value)\n    const dispatch = useDispatch()\n    const [amount, setAmount] = useState (0)\n\n\n    return (\n        <View style={styles.container}>\n            <Button title='+' onPress={()=>dispatch(increment())} />\n            <Text>{count}</Text>\n            <Button title='-' onPress={()=>dispatch(decrement())} />\n            <View style={styles.inputContainer} >\n                <TextInput style={styles.input} onChangeText={(t)=>setAmount(parseInt(t))}/>\n                < Button title='agregar' onPress={()=>dispatch(incrementByAmount(amount))}/>\n            </View >\n        </View>\n    )\n}\n\nexport default Counter\n\nconst styles = StyleSheet.create({\n    container:{\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n    },\n    inputContainer:{\n        flexDirection: 'row',\n        justifyContent: 'space-around',\n        alignItems: 'center',\n    }\n})"],"mappings":";;;;;;AACA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,SAAS,EAAEC,iBAAiB,EAAEC,SAAS;AAA0C,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE1F,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;EAElB,IAAMC,KAAK,GAACV,WAAW,CAAC,UAACW,KAAK;IAAA,OAAGA,KAAK,CAACC,OAAO,CAACC,KAAK;EAAA,EAAC;EACrD,IAAMC,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAC9B,IAAAc,SAAA,GAA4BhB,QAAQ,CAAE,CAAC,CAAC;IAAAiB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAjCG,MAAM,GAAAF,UAAA;IAAEG,SAAS,GAAAH,UAAA;EAGxB,OACIR,KAAA,CAACY,IAAI;IAACC,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC1BlB,IAAA,CAACmB,MAAM;MAACC,KAAK,EAAC,GAAG;MAACC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAIb,QAAQ,CAACZ,SAAS,CAAC,CAAC,CAAC;MAAA;IAAC,CAAE,CAAC,EACxDI,IAAA,CAACsB,IAAI;MAAAJ,QAAA,EAAEd;IAAK,CAAO,CAAC,EACpBJ,IAAA,CAACmB,MAAM;MAACC,KAAK,EAAC,GAAG;MAACC,OAAO,EAAE,SAAAA,QAAA;QAAA,OAAIb,QAAQ,CAACV,SAAS,CAAC,CAAC,CAAC;MAAA;IAAC,CAAE,CAAC,EACxDI,KAAA,CAACY,IAAI;MAACC,KAAK,EAAEC,MAAM,CAACO,cAAe;MAAAL,QAAA,GAC/BlB,IAAA,CAACwB,SAAS;QAACT,KAAK,EAAEC,MAAM,CAACS,KAAM;QAACC,YAAY,EAAE,SAAAA,aAACC,CAAC;UAAA,OAAGd,SAAS,CAACe,QAAQ,CAACD,CAAC,CAAC,CAAC;QAAA;MAAC,CAAC,CAAC,EAC5E3B,IAAA,CAAEmB,MAAM;QAACC,KAAK,EAAC,SAAS;QAACC,OAAO,EAAE,SAAAA,QAAA;UAAA,OAAIb,QAAQ,CAACX,iBAAiB,CAACe,MAAM,CAAC,CAAC;QAAA;MAAC,CAAC,CAAC;IAAA,CACzE,CAAC;EAAA,CACN,CAAC;AAEf,CAAC;AAED,eAAeT,OAAO;AAEtB,IAAMa,MAAM,GAAGa,UAAU,CAACC,MAAM,CAAC;EAC7Bb,SAAS,EAAC;IACNc,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,cAAc;IAC9BC,UAAU,EAAE;EAChB,CAAC;EACDV,cAAc,EAAC;IACXQ,aAAa,EAAE,KAAK;IACpBC,cAAc,EAAE,cAAc;IAC9BC,UAAU,EAAE;EAChB;AACJ,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}